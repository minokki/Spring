package com.fastcampus.ch2;

import javax.validation.Valid;

import org.springframework.beans.propertyeditors.StringArrayPropertyEditor;
import org.springframework.core.convert.ConversionService;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.WebDataBinder;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.InitBinder;
import org.springframework.web.bind.annotation.PostMapping;

@Controller
public class RegisterController {
	
	//데이터타입 변환 메서드
	@InitBinder
	public void toDate(WebDataBinder binder) {
		
		ConversionService conversionService = binder.getConversionService();
		System.out.println("conversionService= " + conversionService);
		
//		SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
//		binder.registerCustomEditor(Date.class,new CustomDateEditor(df,false));
		binder.registerCustomEditor(String[].class,new StringArrayPropertyEditor("#"));
		binder.addValidator(new UserValidator()); // UserValidator를 WebDataBinder의 로컬 validator로 등록
	}
	

//	@RequestMapping("/register/add") //신규회원 가입 화면
	@GetMapping("/register/add")
	public String register() {
		return "registerForm"; //
	
	}
	
//	@RequestMapping(value="/register/save", method=RequestMethod.POST)
	@PostMapping("/register/save") //스프링 4.3부터
	public String save(@Valid User user,BindingResult result, Model model) throws Exception{
		System.out.println("result="+result);
		System.out.println("user="+user);
		
		//수동 검증 - validator를 직접 생성하고, validate()를 직접 호출
//		UserValidator userValidator = new UserValidator();
//		userValidator.validate(user,result); //BindingResult는 errors의 자손
		
		//User 객체를 검증한 결과 에러가 있으면, registerForm을 이용해 에러를 보여줘야함
		if(result.hasErrors()) {
			return "registerForm";
		}
		
//		//1. 유효성 검사
//		if(!isValid(user)) {
//			String msg= URLEncoder.encode("id를 잘못입력하셨습니다.","utf-8");
//			model.addAttribute("msg", msg);
//			return "redirect:/register/add";
				
//			return "redirect:/register/add?msg="+msg; //URL재작성
//		}
	
		return "registerInfo";
	}

private boolean isValid(User user) {
	// TODO Auto-generated method stub
	return true;
}
}
